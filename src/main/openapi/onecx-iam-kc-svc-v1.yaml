---
openapi: 3.0.3
info:
  title: onecx-tenant data import
  version: 1.0.0
servers:
  - url: "http://onecx-iam-kc-svc:8080"
tags:
  - name: AdminRoleController
    description: IAM admin role controller
  - name: AdminUserController
    description: IAM admin controller
paths:
  /v1/roles/search:
    post:
      security:
        - oauth2: [ ocx-ia:all, ocx-ia:read ]
      tags:
        - AdminRoleController
      summary: Search roles by criteria
      operationId: rolesSearchByCriteria
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/RoleSearchCriteria'
      responses:
        200:
          description: OK
          content:
            "application/json":
              schema:
                $ref: "#/components/schemas/RolePageResult"
        400:
          description: Bad request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetailResponse'
  /v1/user/password:
    put:
      security:
        - oauth2: [ ocx-ia:write ]
      tags:
        - AdminUserController
      summary: user reset password
      operationId: userResetPassword
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UserResetPasswordRequest'
      responses:
        204:
          description: reset password succeeded
        400:
          description: Bad request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetailResponse'
components:
  securitySchemes:
    oauth2:
      type: oauth2
      flows:
        clientCredentials:
          tokenUrl: https://oauth.simple.api/token
          scopes:
            ocx-ia:read: Grants read access
            ocx-ia:write: Grants write access
  schemas:
    RoleSearchCriteria:
      type: object
      properties:
        name:
          type: string
        pageNumber:
          format: int32
          description: The number of page.
          default: 0
          type: integer
        pageSize:
          format: int32
          description: The size of page
          default: 100
          maximum: 1000
          type: integer
    RolePageResult:
      type: object
      properties:
        totalElements:
          format: int64
          description: The total elements in the resource.
          type: integer
        number:
          format: int32
          type: integer
        size:
          format: int32
          type: integer
        totalPages:
          format: int64
          type: integer
        stream:
          type: array
          items:
            $ref: '#/components/schemas/Role'
    Role:
      type: object
      properties:
        name:
          type: string
        description:
          type: string
    UserResetPasswordRequest:
      type: object
      required:
        - password
      properties:
        password:
          type: string
          format: password
          minLength: 1
    ProblemDetailResponse:
      type: object
      properties:
        errorCode:
          type: string
        detail:
          type: string
        params:
          type: array
          items:
            $ref: '#/components/schemas/ProblemDetailParam'
        invalidParams:
          type: array
          items:
            $ref: '#/components/schemas/ProblemDetailInvalidParam'
    ProblemDetailParam:
      type: object
      properties:
        key:
          type: string
        value:
          type: string
    ProblemDetailInvalidParam:
      type: object
      properties:
        name:
          type: string
        message:
          type: string
